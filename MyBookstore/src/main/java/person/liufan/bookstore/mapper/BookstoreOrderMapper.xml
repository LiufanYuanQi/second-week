<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="person.liufan.bookstore.mapper.BookstoreOrderMapper">
  <resultMap id="BaseResultMap" type="person.liufan.bookstore.entity.BookstoreOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tb_bookstore_order_user_id" jdbcType="BIGINT" property="tbBookstoreOrderUserId" />
    <result column="tb_bookstore_order_total_money" jdbcType="DECIMAL" property="tbBookstoreOrderTotalMoney" />
    <result column="tb_bookstore_order_shipping_address" jdbcType="VARCHAR" property="tbBookstoreOrderShippingAddress" />
    <result column="tb_bookstore_order_create_time" jdbcType="TIMESTAMP" property="tbBookstoreOrderCreateTime" />
    <result column="tb_bookstore_order_update_time" jdbcType="TIMESTAMP" property="tbBookstoreOrderUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id,tb_bookstore_order_user_id, tb_bookstore_order_total_money, tb_bookstore_order_shipping_address, tb_bookstore_order_create_time,
    tb_bookstore_order_update_time
  </sql>
  <select id="listOrderById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_bookstore_order
    <where>
      <if test="id != null and id !='' ">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="tbBookstoreOrderUserId != null and tbBookstoreOrderUserId !='' ">
        and tb_bookstore_order_user_id = #{tbBookstoreOrderUserId,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_bookstore_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_bookstore_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="person.liufan.bookstore.entity.BookstoreOrder">
    insert into tb_bookstore_order (id,tb_bookstore_order_user_id, tb_bookstore_order_total_money, tb_bookstore_order_shipping_address,
      tb_bookstore_order_create_time, tb_bookstore_order_update_time
      )
    values (#{id,jdbcType=BIGINT}, #{tbBookstoreOrderUserId,jdbcType=BIGINT},#{tbBookstoreOrderTotalMoney,jdbcType=DECIMAL}, #{tbBookstoreOrderShippingAddress,jdbcType=VARCHAR},
      #{tbBookstoreOrderCreateTime,jdbcType=TIMESTAMP}, #{tbBookstoreOrderUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="person.liufan.bookstore.entity.BookstoreOrder">
    insert into tb_bookstore_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tbBookstoreOrderUserId != null">
        tb_bookstore_order_user_id,
      </if>
      <if test="tbBookstoreOrderTotalMoney != null">
        tb_bookstore_order_total_money,
      </if>
      <if test="tbBookstoreOrderShippingAddress != null">
        tb_bookstore_order_shipping_address,
      </if>
      <if test="tbBookstoreOrderCreateTime != null">
        tb_bookstore_order_create_time,
      </if>
      <if test="tbBookstoreOrderUpdateTime != null">
        tb_bookstore_order_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tbBookstoreOrderUserId != null">
        #{tbBookstoreOrderUserId,jdbcType=BIGINT},
      </if>
      <if test="tbBookstoreOrderTotalMoney != null">
        #{tbBookstoreOrderTotalMoney,jdbcType=DECIMAL},
      </if>
      <if test="tbBookstoreOrderShippingAddress != null">
        #{tbBookstoreOrderShippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="tbBookstoreOrderCreateTime != null">
        #{tbBookstoreOrderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbBookstoreOrderUpdateTime != null">
        #{tbBookstoreOrderUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="person.liufan.bookstore.entity.BookstoreOrder">
    update tb_bookstore_order
    <set>
      <if test="tbBookstoreOrderUserId != null">
        tb_bookstore_order_user_id = #{tbBookstoreOrderUserId,jdbcType=BIGINT},
      </if>
      <if test="tbBookstoreOrderTotalMoney != null">
        tb_bookstore_order_total_money = #{tbBookstoreOrderTotalMoney,jdbcType=DECIMAL},
      </if>
      <if test="tbBookstoreOrderShippingAddress != null">
        tb_bookstore_order_shipping_address = #{tbBookstoreOrderShippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="tbBookstoreOrderCreateTime != null">
        tb_bookstore_order_create_time = #{tbBookstoreOrderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tbBookstoreOrderUpdateTime != null">
        tb_bookstore_order_update_time = #{tbBookstoreOrderUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="person.liufan.bookstore.entity.BookstoreOrder">
    update tb_bookstore_order
    set tb_bookstore_order_user_id = #{tbBookstoreOrderUserId,jdbcType=BIGINT},
      tb_bookstore_order_total_money = #{tbBookstoreOrderTotalMoney,jdbcType=DECIMAL},
      tb_bookstore_order_shipping_address = #{tbBookstoreOrderShippingAddress,jdbcType=VARCHAR},
      tb_bookstore_order_create_time = #{tbBookstoreOrderCreateTime,jdbcType=TIMESTAMP},
      tb_bookstore_order_update_time = #{tbBookstoreOrderUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>